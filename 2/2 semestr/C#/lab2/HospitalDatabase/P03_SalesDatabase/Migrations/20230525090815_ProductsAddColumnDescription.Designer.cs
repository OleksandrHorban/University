// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03_SalesDatabase.Data;

#nullable disable

namespace P03_SalesDatabase.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20230525090815_ProductsAddColumnDescription")]
    partial class ProductsAddColumnDescription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("CreditCardNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreditCardNumber = "3529-5634-1268-8411",
                            Email = "Myrtice.Wunsch@yahoo.com",
                            Name = "Olin"
                        },
                        new
                        {
                            CustomerId = 2,
                            CreditCardNumber = "6767-9464-3497-6305-37",
                            Email = "Flavie92@yahoo.com",
                            Name = "Hobart"
                        },
                        new
                        {
                            CustomerId = 3,
                            CreditCardNumber = "6771-8915-1296-3634",
                            Email = "Elody.Conn38@hotmail.com",
                            Name = "Cary"
                        },
                        new
                        {
                            CustomerId = 4,
                            CreditCardNumber = "6382-6301-4060-4355",
                            Email = "Michale.Walsh@hotmail.com",
                            Name = "Brain"
                        },
                        new
                        {
                            CustomerId = 5,
                            CreditCardNumber = "6759-2645-4336-8809",
                            Email = "Elsa.McKenzie@gmail.com",
                            Name = "Connie"
                        },
                        new
                        {
                            CustomerId = 6,
                            CreditCardNumber = "6767-8512-6773-8870-30",
                            Email = "Cathryn_Klocko@gmail.com",
                            Name = "Aaliyah"
                        },
                        new
                        {
                            CustomerId = 7,
                            CreditCardNumber = "3529-2611-3383-6142",
                            Email = "Priscilla_Kerluke@hotmail.com",
                            Name = "Rylan"
                        },
                        new
                        {
                            CustomerId = 8,
                            CreditCardNumber = "3417-418840-29262",
                            Email = "Jayme_Little@gmail.com",
                            Name = "Noble"
                        },
                        new
                        {
                            CustomerId = 9,
                            CreditCardNumber = "6011-7339-0559-6508",
                            Email = "Shanny.Cremin@hotmail.com",
                            Name = "Kaycee"
                        },
                        new
                        {
                            CustomerId = 10,
                            CreditCardNumber = "4207876597490",
                            Email = "Berniece51@gmail.com",
                            Name = "Marion"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar")
                        .HasDefaultValue("No description")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Refined Granite Keyboard",
                            Price = 2820m,
                            Quantity = 1m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Ergonomic Soft Towels",
                            Price = 2013m,
                            Quantity = 4m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Tasty Plastic Hat",
                            Price = 483m,
                            Quantity = 6m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Generic Concrete Keyboard",
                            Price = 916m,
                            Quantity = 7m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Awesome Fresh Towels",
                            Price = 1074m,
                            Quantity = 4m
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Incredible Plastic Fish",
                            Price = 918m,
                            Quantity = 10m
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Small Steel Shirt",
                            Price = 2992m,
                            Quantity = 8m
                        },
                        new
                        {
                            ProductId = 8,
                            Name = "Unbranded Steel Car",
                            Price = 2160m,
                            Quantity = 2m
                        },
                        new
                        {
                            ProductId = 9,
                            Name = "Sleek Frozen Chips",
                            Price = 2444m,
                            Quantity = 8m
                        },
                        new
                        {
                            ProductId = 10,
                            Name = "Ergonomic Metal Cheese",
                            Price = 2858m,
                            Quantity = 2m
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("Date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            CustomerId = 10,
                            Date = new DateTime(2022, 6, 24, 8, 3, 53, 634, DateTimeKind.Local).AddTicks(1075),
                            ProductId = 1,
                            StoreId = 10
                        },
                        new
                        {
                            SaleId = 2,
                            CustomerId = 7,
                            Date = new DateTime(2023, 2, 25, 8, 56, 18, 630, DateTimeKind.Local).AddTicks(1077),
                            ProductId = 4,
                            StoreId = 4
                        },
                        new
                        {
                            SaleId = 3,
                            CustomerId = 5,
                            Date = new DateTime(2023, 3, 4, 17, 13, 55, 877, DateTimeKind.Local).AddTicks(326),
                            ProductId = 7,
                            StoreId = 9
                        },
                        new
                        {
                            SaleId = 4,
                            CustomerId = 8,
                            Date = new DateTime(2023, 3, 12, 16, 1, 34, 573, DateTimeKind.Local).AddTicks(3908),
                            ProductId = 10,
                            StoreId = 3
                        },
                        new
                        {
                            SaleId = 5,
                            CustomerId = 2,
                            Date = new DateTime(2022, 10, 18, 16, 21, 54, 649, DateTimeKind.Local).AddTicks(1374),
                            ProductId = 7,
                            StoreId = 7
                        },
                        new
                        {
                            SaleId = 6,
                            CustomerId = 5,
                            Date = new DateTime(2023, 1, 2, 15, 32, 21, 143, DateTimeKind.Local).AddTicks(8843),
                            ProductId = 2,
                            StoreId = 1
                        },
                        new
                        {
                            SaleId = 7,
                            CustomerId = 1,
                            Date = new DateTime(2023, 4, 30, 4, 54, 17, 432, DateTimeKind.Local).AddTicks(9453),
                            ProductId = 10,
                            StoreId = 8
                        },
                        new
                        {
                            SaleId = 8,
                            CustomerId = 8,
                            Date = new DateTime(2022, 8, 29, 17, 30, 3, 179, DateTimeKind.Local).AddTicks(7844),
                            ProductId = 8,
                            StoreId = 10
                        },
                        new
                        {
                            SaleId = 9,
                            CustomerId = 9,
                            Date = new DateTime(2022, 10, 2, 0, 11, 30, 455, DateTimeKind.Local).AddTicks(8002),
                            ProductId = 7,
                            StoreId = 3
                        },
                        new
                        {
                            SaleId = 10,
                            CustomerId = 7,
                            Date = new DateTime(2023, 3, 15, 15, 6, 47, 695, DateTimeKind.Local).AddTicks(11),
                            ProductId = 7,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Name = "Conroy Inc"
                        },
                        new
                        {
                            StoreId = 2,
                            Name = "Ledner, Mayert and Fahey"
                        },
                        new
                        {
                            StoreId = 3,
                            Name = "Hand, Yost and Parker"
                        },
                        new
                        {
                            StoreId = 4,
                            Name = "Turner, Kovacek and Zboncak"
                        },
                        new
                        {
                            StoreId = 5,
                            Name = "Feest - Smith"
                        },
                        new
                        {
                            StoreId = 6,
                            Name = "Zboncak, Armstrong and Wyman"
                        },
                        new
                        {
                            StoreId = 7,
                            Name = "Marvin, Schultz and Flatley"
                        },
                        new
                        {
                            StoreId = 8,
                            Name = "Volkman Group"
                        },
                        new
                        {
                            StoreId = 9,
                            Name = "Fadel Group"
                        },
                        new
                        {
                            StoreId = 10,
                            Name = "Will, Hermiston and Adams"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
