// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03_SalesDatabase.Data;

#nullable disable

namespace P03_SalesDatabase.Migrations
{
    [DbContext(typeof(SalesContext))]
    partial class SalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("CreditCardNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreditCardNumber = "3554-0532-7397-1757",
                            Email = "Florian8@hotmail.com",
                            Name = "Erica"
                        },
                        new
                        {
                            CustomerId = 2,
                            CreditCardNumber = "6459-2128-4380-1568",
                            Email = "Aniya_Parker@hotmail.com",
                            Name = "Creola"
                        },
                        new
                        {
                            CustomerId = 3,
                            CreditCardNumber = "6011-9530-3506-8059",
                            Email = "Dominique87@gmail.com",
                            Name = "Nyah"
                        },
                        new
                        {
                            CustomerId = 4,
                            CreditCardNumber = "3014-753851-8799",
                            Email = "Ludie_Bednar22@yahoo.com",
                            Name = "Jo"
                        },
                        new
                        {
                            CustomerId = 5,
                            CreditCardNumber = "3529-0838-7549-7150",
                            Email = "Lennie_Champlin4@gmail.com",
                            Name = "Valentina"
                        },
                        new
                        {
                            CustomerId = 6,
                            CreditCardNumber = "6771448786571922",
                            Email = "Cornell_Powlowski@gmail.com",
                            Name = "Chadd"
                        },
                        new
                        {
                            CustomerId = 7,
                            CreditCardNumber = "5430-4038-2431-2719",
                            Email = "Bennett.Blick37@hotmail.com",
                            Name = "Jaquelin"
                        },
                        new
                        {
                            CustomerId = 8,
                            CreditCardNumber = "3040-484869-6660",
                            Email = "Matt59@yahoo.com",
                            Name = "Hermann"
                        },
                        new
                        {
                            CustomerId = 9,
                            CreditCardNumber = "6759-6992-1169-2453-537",
                            Email = "Hailee63@gmail.com",
                            Name = "Archibald"
                        },
                        new
                        {
                            CustomerId = 10,
                            CreditCardNumber = "5531-5693-2953-5760",
                            Email = "Elody.Medhurst70@yahoo.com",
                            Name = "Marcelle"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar")
                        .HasDefaultValue("No description")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Tasty Plastic Car",
                            Price = 747m,
                            Quantity = 1m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Intelligent Steel Fish",
                            Price = 2284m,
                            Quantity = 10m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Small Granite Ball",
                            Price = 2965m,
                            Quantity = 6m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Ergonomic Rubber Chips",
                            Price = 2600m,
                            Quantity = 9m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Incredible Cotton Bacon",
                            Price = 2725m,
                            Quantity = 4m
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Generic Frozen Car",
                            Price = 912m,
                            Quantity = 4m
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Gorgeous Steel Soap",
                            Price = 206m,
                            Quantity = 10m
                        },
                        new
                        {
                            ProductId = 8,
                            Name = "Generic Steel Shirt",
                            Price = 1458m,
                            Quantity = 2m
                        },
                        new
                        {
                            ProductId = 9,
                            Name = "Sleek Cotton Chips",
                            Price = 443m,
                            Quantity = 7m
                        },
                        new
                        {
                            ProductId = 10,
                            Name = "Tasty Fresh Ball",
                            Price = 423m,
                            Quantity = 2m
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("Date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            CustomerId = 3,
                            Date = new DateTime(2023, 3, 6, 4, 47, 46, 143, DateTimeKind.Local).AddTicks(1298),
                            ProductId = 4,
                            StoreId = 6
                        },
                        new
                        {
                            SaleId = 2,
                            CustomerId = 7,
                            Date = new DateTime(2022, 12, 30, 3, 19, 28, 816, DateTimeKind.Local).AddTicks(7989),
                            ProductId = 5,
                            StoreId = 4
                        },
                        new
                        {
                            SaleId = 3,
                            CustomerId = 2,
                            Date = new DateTime(2022, 8, 19, 0, 30, 38, 496, DateTimeKind.Local).AddTicks(1163),
                            ProductId = 9,
                            StoreId = 9
                        },
                        new
                        {
                            SaleId = 4,
                            CustomerId = 3,
                            Date = new DateTime(2022, 11, 7, 13, 33, 35, 444, DateTimeKind.Local).AddTicks(1683),
                            ProductId = 10,
                            StoreId = 6
                        },
                        new
                        {
                            SaleId = 5,
                            CustomerId = 2,
                            Date = new DateTime(2023, 2, 27, 20, 15, 32, 495, DateTimeKind.Local).AddTicks(8236),
                            ProductId = 1,
                            StoreId = 10
                        },
                        new
                        {
                            SaleId = 6,
                            CustomerId = 7,
                            Date = new DateTime(2022, 7, 20, 12, 1, 45, 329, DateTimeKind.Local).AddTicks(8405),
                            ProductId = 7,
                            StoreId = 7
                        },
                        new
                        {
                            SaleId = 7,
                            CustomerId = 7,
                            Date = new DateTime(2022, 5, 30, 21, 21, 43, 954, DateTimeKind.Local).AddTicks(1536),
                            ProductId = 1,
                            StoreId = 1
                        },
                        new
                        {
                            SaleId = 8,
                            CustomerId = 1,
                            Date = new DateTime(2022, 8, 20, 15, 46, 52, 810, DateTimeKind.Local).AddTicks(8657),
                            ProductId = 10,
                            StoreId = 9
                        },
                        new
                        {
                            SaleId = 9,
                            CustomerId = 5,
                            Date = new DateTime(2022, 10, 5, 20, 33, 33, 125, DateTimeKind.Local).AddTicks(7691),
                            ProductId = 6,
                            StoreId = 3
                        },
                        new
                        {
                            SaleId = 10,
                            CustomerId = 5,
                            Date = new DateTime(2023, 4, 25, 16, 42, 29, 450, DateTimeKind.Local).AddTicks(4194),
                            ProductId = 9,
                            StoreId = 9
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Name = "Hermann - Botsford"
                        },
                        new
                        {
                            StoreId = 2,
                            Name = "Purdy Inc"
                        },
                        new
                        {
                            StoreId = 3,
                            Name = "Frami LLC"
                        },
                        new
                        {
                            StoreId = 4,
                            Name = "Schaden Group"
                        },
                        new
                        {
                            StoreId = 5,
                            Name = "Emmerich, Jakubowski and Koss"
                        },
                        new
                        {
                            StoreId = 6,
                            Name = "Buckridge Group"
                        },
                        new
                        {
                            StoreId = 7,
                            Name = "Bernier, McClure and Feest"
                        },
                        new
                        {
                            StoreId = 8,
                            Name = "Hahn - Krajcik"
                        },
                        new
                        {
                            StoreId = 9,
                            Name = "Rippin, Metz and Cronin"
                        },
                        new
                        {
                            StoreId = 10,
                            Name = "Feeney Inc"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
